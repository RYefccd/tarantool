stages:
  - test

variables:
  GITLAB_MAKE: "make -f .gitlab.mk"
  GIT_STRATEGY: none
  GIT_CLEAN_FLAGS: none
  OSX_VARDIR: /tmp/tnt

before_script:
  - /bin/bash -c "pwd && ls -d .git || git clone --recurse-submodules ${CI_REPOSITORY_URL} ."
  - /bin/bash -c "! docker -v || (uid=`id -u` ; gid=`id -g` ; docker run -w /source -v ${PWD}:/source -i packpack/packpack:el-7 /bin/bash -c \"chown -R \$uid:\$gid * .[^.]*\")"
  - /bin/bash -c "git fetch -p && git checkout -f ${CI_COMMIT_SHORT_SHA}"
  - /bin/bash -c "[ -z \"${CI_COMMIT_TAG:-}\" ] && git tag -d \"$(git tag --points-at HEAD)\" 2>/dev/null || true"
  - /bin/bash -c "git submodule sync --recursive && git submodule update --force --init --recursive || git submodule update --recursive --init"
  - /bin/bash -c "git clean -ffdx && git submodule foreach git clean -ffdx && git submodule foreach git status"

.pack_only_template: &pack_only_definition
  except:
    - master
    - tags

.docker_test_template: &docker_test_definition
  image: "${CI_REGISTRY}/${CI_PROJECT_PATH}/testing/debian-stretch:latest"
  stage: test
  tags:
    - docker_sh7_test

.pack_template: &pack_definition
  <<: *pack_only_definition
  stage: test
  tags:
    - deploy_sh7
  script:
    - ${GITLAB_MAKE} package

.pack_test_template: &pack_test_definition
  <<: *pack_only_definition
  stage: test
  tags:
    - deploy_sh7_test
  script:
    - ${GITLAB_MAKE} package

.osx_template: &osx_definition
  stage: test
  script:
    - ${GITLAB_MAKE} test_osx

release:
  <<: *docker_test_definition
  script:
    - ${GITLAB_MAKE} test_debian_no_deps

osx_15_release:
  tags:
    - osx_15
  <<: *osx_definition

centos_7:
  <<: *pack_definition
  variables:
    OS: 'el'
    DIST: '7'
